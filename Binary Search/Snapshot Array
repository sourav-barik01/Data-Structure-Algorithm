Leetcode - 1146  -> AMAZON, MICROSOFT

class SnapshotArray {
public:
    int snap_id;
    vector<vector<pair<int, int>>> snapArray;       // {index -> {snap_id, value}}
    
    SnapshotArray(int length) {
        snap_id = 0;
        snapArray.resize(length);   // making the vector size = given length

        for(int i=0; i<length; i++){
            snapArray[i].push_back(make_pair(0, 0));    // initializing all values with 0
        }
    }
    
    // Harr index mae snap_id kae sath value ko push kr do
    void set(int index, int val) {
        snapArray[index].push_back(make_pair(snap_id, val));
    }
    
    // A/Q
    int snap() {
        snap_id++;
        return snap_id - 1;
    }
    
    int get(int index, int snap_id) {
        int l = 0, r = snapArray[index].size()-1;   // traversing in index which contains snap_id & value 
        int result = 0;

        while(l <= r) {
            int mid = l + (r-l)/2;
            if(snapArray[index][mid].first <= snap_id) {
                result = snapArray[index][mid].second;      // storing the value
                l = mid+1;
            } 
            else {
                r = mid-1;
            }
        }
        return result;
    }
};

/**
 * Your SnapshotArray object will be instantiated and called as such:
 * SnapshotArray* obj = new SnapshotArray(length);
 * obj->set(index,val);
 * int param_2 = obj->snap();
 * int param_3 = obj->get(index,snap_id);
 */
